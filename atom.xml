<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>有為転変</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://fanannan.github.io/"/>
  <updated>2017-02-08T06:30:16.517Z</updated>
  <id>http://fanannan.github.io/</id>
  
  <author>
    <name>fanannan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>タックスディのアノマリー</title>
    <link href="http://fanannan.github.io/2017/02/08/taxday-anomaly/"/>
    <id>http://fanannan.github.io/2017/02/08/taxday-anomaly/</id>
    <published>2017-02-08T05:55:58.000Z</published>
    <updated>2017-02-08T06:30:16.517Z</updated>
    
    <content type="html"><![CDATA[<hr>
<h2 id="この記事に書いてあること"><a href="#この記事に書いてあること" class="headerlink" title="この記事に書いてあること"></a>この記事に書いてあること</h2><p>・米国の確定申告締切日（”タックスディ”）から翌日にかけて、米国の株価指数が過去26年平均で51bp上昇するということが確認できた。</p>
<hr>
<h2 id="タックスディのアノマリー"><a href="#タックスディのアノマリー" class="headerlink" title="タックスディのアノマリー"></a>タックスディのアノマリー</h2><p>米国の確定申告締切日（”タックスディ”）から翌日にかけて株価が上がるというアノマリーを発見したという論文（ <a href="https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2910752" target="_blank" rel="external">https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2910752</a> ）が出ていたので、簡単に確かめてみることにした。</p>
<h2 id="データ"><a href="#データ" class="headerlink" title="データ"></a>データ</h2><p>対象銘柄については、S&amp;P500、ダウ・ジョーンズ、VIX、ついでにVXXとVIXとし、株価データはYahoo Financeから取得する。また、タックスディの日付データは、<a href="https://www.timeanddate.com/holidays/us/tax-day" target="_blank" rel="external">https://www.timeanddate.com/holidays/us/tax-day</a> を参照して、1990年からの過去26年分について評価する。</p>
<h2 id="結果"><a href="#結果" class="headerlink" title="結果"></a>結果</h2><p>下記左のチャートは、タックスディの終値を１としたときの、前後５日間の終値の推移を示したものである。また、右のチャートはタックスディの終値からその翌日終値までの変化率の分布を示したものである。</p>
<p>S&amp;P500に関しては、平均51bpのプラスで、上げる確率もまずまず高い。それと比べると、ダウ・ジョーンズについては、比較的弱い印象だ。大型株の方が影響を受けやすいようにも思ったが、そうではないらしい。他のVIXなどは、サンプルが少なくて分布と言えるような形になってはいない。</p>
<p>なお、今年のタックスディは４月１８日ということである。はたしてどうなるか。</p>
<table border="0"><tr><br><img src="/2017/02/08/taxday-anomaly/taxday_anomaly.png" title="タックスディ前後の株価の動き" width="1200"><br></tr></table>

<pre><code>import numpy as np
import pandas as pd
import pandas_datareader.data as web
import datetime as dt
import matplotlib.pyplot as plt
#
#from IPython.core.display import display, HTML
#display(HTML(&quot;&lt;style&gt;.container { width:80% !important; }&lt;/style&gt;&quot;))

start=&apos;1990-01-01&apos;
gspc_ = web.DataReader(&apos;^GSPC&apos;, &apos;yahoo&apos;, start=start)
dji_ = web.DataReader(&apos;^DJI&apos;, &apos;yahoo&apos;, start=start)
vix_ = web.DataReader(&apos;^VIX&apos;, &apos;yahoo&apos;, start=start)
xiv_ = web.DataReader(&apos;XIV&apos;, &apos;yahoo&apos;, start=start)
vxx_ = web.DataReader(&apos;VXX&apos;, &apos;yahoo&apos;, start=start)

gspc = gspc_.copy()
dji = dji_.copy()
vix = vix_.copy()
xiv = xiv_.copy()
vxx = vxx_.copy()
#
for c in [&apos;Open&apos;, &apos;High&apos;, &apos;Low&apos;, &apos;Close&apos;]:
    xiv[c] = xiv[c]*xiv[&apos;Adj Close&apos;]/xiv[&apos;Close&apos;]
    vxx[c] = vxx[c]*vxx[&apos;Adj Close&apos;]/vxx[&apos;Close&apos;]
for c in [&apos;Open&apos;, &apos;High&apos;, &apos;Low&apos;, &apos;Adj Close&apos;, &apos;Volume&apos;]:
    del gspc[c]
    del dji[c]
    del vix[c]
    del xiv[c]
    del vxx[c]
gspc = gspc.rename(columns = {&apos;Close&apos;:&apos;sp500_Close&apos;})
dji = dji.rename(columns = {&apos;Close&apos;:&apos;dji_Close&apos;})
vix = vix.rename(columns = {&apos;Close&apos;:&apos;vix_Close&apos;})
xiv = xiv.rename(columns = {&apos;Close&apos;:&apos;xiv_Close&apos;})
vxx = vxx.rename(columns = {&apos;Close&apos;:&apos;vxx_Close&apos;})
df = pd.concat([gspc, dji, vix, vxv, xiv, vxx], axis=1)
df.columns


taxday_list = [
    &apos;1990-04-16&apos;,&apos;1991-04-15&apos;,&apos;1992-04-15&apos;,&apos;1993-04-15&apos;,&apos;1994-04-15&apos;,&apos;1995-04-17&apos;,&apos;1996-04-15&apos;,&apos;1997-04-15&apos;,&apos;1998-04-15&apos;,&apos;1999-04-15&apos;,
    &apos;2000-04-17&apos;,&apos;2001-04-16&apos;,&apos;2002-04-15&apos;,&apos;2003-04-15&apos;,&apos;2004-04-15&apos;,&apos;2005-04-15&apos;,&apos;2006-04-17&apos;,&apos;2007-04-17&apos;,&apos;2008-04-15&apos;,&apos;2009-04-15&apos;,
    &apos;2010-04-15&apos;,&apos;2011-04-18&apos;,&apos;2012-04-17&apos;,&apos;2013-04-15&apos;,&apos;2014-04-15&apos;,&apos;2015-04-15&apos;,&apos;2016-04-18&apos;,]

def search(df, taxday):
    for i, (idx, data) in enumerate(df.iterrows()):
        if idx==taxday:
            return df[i-5:i+5+1]
    raise Exception()

def read_date(s):
    return dt.datetime.strptime(s, &apos;%Y-%m-%d&apos;)

def calc(df):
    dic = dict()
    for taxday_str in taxday_list:
        taxday = read_date(taxday_str)
        df_prices = search(df, taxday)
        for column in df_prices.columns:
            if not column in dic:
                dic[column] = list()
            dic[column].append((taxday_str, (df_prices[column]/df_prices[column].values[5]).values))
    return dic

def draw(df, tickers=None):
    dic = calc(df)
    columns = dic.keys() if tickers is None else [t+&apos;_Close&apos; for t in tickers]
    fig = plt.figure(figsize=(20, 8))
    for i, k in enumerate(columns):
        v = dic[k]
        name = k[:-6] # == ticker
        ax = fig.add_subplot(len(dic), 2, i*2+1)
        ax.title.set_text(name+&apos;&apos;.format())
        ax.grid()
        for vv in v:
            taxday, rs = vv
            ax.plot(rs)
        ra = [vv[1][6] for vv in v]
        m = np.mean([vvv for vvv in ra if not np.isnan(vvv)])
        bx = fig.add_subplot(len(dic), 2, i*2+2)
        bx.title.set_text(name+&apos;: {}&apos;.format(m))
        bx.grid()
        bx.hist(ra, bins=50, range=[0.8, 1.2])

draw(df, [&apos;sp500&apos;, &apos;dji&apos;, &apos;vix&apos;, &apos;vxx&apos;, &apos;xiv&apos;])
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;この記事に書いてあること&quot;&gt;&lt;a href=&quot;#この記事に書いてあること&quot; class=&quot;headerlink&quot; title=&quot;この記事に書いてあること&quot;&gt;&lt;/a&gt;この記事に書いてあること&lt;/h2&gt;&lt;p&gt;・米国の確定申告締切日（”タックスディ”）から翌日
    
    </summary>
    
      <category term="米国株" scheme="http://fanannan.github.io/categories/%E7%B1%B3%E5%9B%BD%E6%A0%AA/"/>
    
      <category term="アノマリー" scheme="http://fanannan.github.io/categories/%E7%B1%B3%E5%9B%BD%E6%A0%AA/%E3%82%A2%E3%83%8E%E3%83%9E%E3%83%AA%E3%83%BC/"/>
    
    
      <category term="米国株" scheme="http://fanannan.github.io/tags/%E7%B1%B3%E5%9B%BD%E6%A0%AA/"/>
    
      <category term="アノマリー" scheme="http://fanannan.github.io/tags/%E3%82%A2%E3%83%8E%E3%83%9E%E3%83%AA%E3%83%BC/"/>
    
  </entry>
  
  <entry>
    <title>VIXの回帰性のチェック</title>
    <link href="http://fanannan.github.io/2017/02/02/vix-autocorr/"/>
    <id>http://fanannan.github.io/2017/02/02/vix-autocorr/</id>
    <published>2017-02-02T08:20:48.000Z</published>
    <updated>2017-02-08T06:44:30.028Z</updated>
    
    <content type="html"><![CDATA[<hr>
<h2 id="この記事に書いてあること"><a href="#この記事に書いてあること" class="headerlink" title="この記事に書いてあること"></a>この記事に書いてあること</h2><p>・VIXの回帰性を確認するために、ハースト指数、リアプノフ指数、偏自己相関などを評価したが、ぱっとしなかった。<br>・とりわけ、ハースト指数、リアプノフ指数の評価には、かなりのデータ数が必要なので、日次のデータでは無理がある。<br>・偏自己相関は使えそうに見えなくもないが、まあ、気のせいと言うほうが良い。</p>
<hr>
<h2 id="VIX指数の推移"><a href="#VIX指数の推移" class="headerlink" title="VIX指数の推移"></a>VIX指数の推移</h2><p>VIX指数の過去の推移を見ると、たまに大きな経済に大きな影響を及ぼすようなことが起きて、VIX指数の値が跳ね上がり、その後、だんだん落ち着くというお馴染みのパターンがある。</p>
<p>VIX指数はS&amp;P５００指数のオプションから計算されるものであり、VIX指数そのものが市場で直接売り買いされるわけでもないが、VIX指数のこの跳ね上がり方のパターンに何か癖を見つけられないものか、少し調べてみたい。</p>
<table border="0"><tr><br><img src="/2017/02/02/vix-autocorr/vix_history.png" title="VIX指数の推移" width="1200"><br></tr></table>

<h2 id="ハースト指数"><a href="#ハースト指数" class="headerlink" title="ハースト指数"></a>ハースト指数</h2><p>まず、はじめに、VIX指数の日次の終値を用いてハースト指数を計算してみる。ハースト指数は、その値が0.5のときにはランダムな動きであることを示し、0.5より大きければ一定の方向性が持続していること、逆に0.5より小さければ反転しやすいことを示す。株価のハースト指数による分析を行った論文では、主な銘柄でハースト指数が0.5より少し大きく、また、ハースト指数が大きい場合にモメンタム戦略が有効であるというようなものを見かける。</p>
<p>pythonのnoldsというライブラリを用いて、ハースト指数の計算期間を色々と変えて、VIX指数のチャートと重ねてみた。下の各チャートの薄い赤線が、ハースト指数で、左目盛がその値である。まず計算して明らかなのは、計算期間が短いと、ちゃんとしたハースト指数の推定ができないということである。左上の観測期間48日のものは推定値が低すぎるように思われるし、それより期間の長い右上の64日のものでもハースト指数が本来0から1の間の値を取るものなのにもかかわらず、適切な計算ができず、下の観測期間128日や256日の計算で、ようやくそれらしい感じとなっている。これは使用したライブラリ固有の問題というよりは、計算アルゴリズムの性質からやむを得ないものと思われる。</p>
<table border="0"><tr><br><img src="/2017/02/02/vix-autocorr/daily_hurst.png" title="日次計算したハースト指数の推移" width="1200"><br></tr></table>

<p>では、ここで、データ数を増やすために、正確な方法ではないことを承知で、VIX指数の日次の終値に加えて、始値も合わせて用いてみよう。そうすると、48日や64日のチャートがそれらしいものになるが、128日や256日のチャートの形にも違いが現れる。始値のデータを加えたために形が変わったのか、データが増えたために形が変わったのかはわからない。</p>
<p>VIX指数の年に数回は跳ね上がるので、ハースト指数の観測期間は短いほうが妥当性がわかりやすいし、また利用価値が高いものと考えられる。そこで、仮に始値と終値の双方を使って計算しても本質的には指し示す意味が同様だと仮定して、どの程度まで短い期間で計算可能か試すこととする。</p>
<p>その結果、始値と終値の両方を用いての日次計算をしてみると、20日では計算不能、25日は数値が異常に小さく、30日はまだ１を超えるケースが散見されるため信頼感に乏しく、35日でようやくそれらしくなるということが分かった。</p>
<table border="0"><tr><br><img src="/2017/02/02/vix-autocorr/daily_oc_hurst.png" title="始値と終値で計算したハースト指数の推移" width="1200"><br></tr></table>

<p>最後に、始値と終値に加えて、高値と安値も加えて日次データを作って、ハースト指数の計算をすることにした。始値と終値は時系列的には適切に並べられるが、高値と安値はそうではない。しかし、ここでは、始値、高値、安値、終値の順番に価格変化が起こるものと乱暴に仮定する。<br>その結果の印象は、良とは到底言えないが、それほどには悪くない。数値の高いところはVIX指数がトレンドっぽく、低いところは反転したりレンジにあったりする傾向があるような感じに見えなくもない。何かの指標に使うには心もとないが、じっくり動きを見て見るくらいの価値はあるかもしれない。</p>
<table border="0"><tr><br><img src="/2017/02/02/vix-autocorr/daily_ohlc_hurst.png" title="始値と高値、安値、終値で計算したハースト指数の推移" width="1200"><br></tr></table>

<p>なお、VIX指数のハースト指数とVIX指数の翌日の変化率の関係を表したのが下記のチャートである。左は横軸に上記の観測期間20日（始値、高値、安値、終値を使用）のハースト指数、縦軸にその翌日までのVIX指数の変化率をプロットしたものである。右のチャートは横軸を当日のハースト指数からその過去５日平均との差にしたものである。<br>ハースト指数が高い時、あるいは、高くなる時のほうが、いくらかVIX指数の変化の幅は大きく、どちらかと言えば上昇しやすい傾向があるように見受けられる。何か大きなイベントが起きて、VIX指数が上昇トレンドに入った時に、勢いづいてVIX指数が上がる時の状況を主に示しているように思われる。</p>
<table border="0"><tr><br><img src="/2017/02/02/vix-autocorr/hurst_sensitivities.png" title="ハースト指数とVIX指数の動きの相関" width="1200"><br></tr></table>

<h2 id="最大リアプノフ指数"><a href="#最大リアプノフ指数" class="headerlink" title="最大リアプノフ指数"></a>最大リアプノフ指数</h2><p>今度は、ハースト指数と同様に、最大リアプノフ指数を求めてみる。最大リアプノフ指数が正の値を取るときには、原系列にカオス性があることを意味する。<br>その計算結果が、下のとおりである。期間が短いものでは、ハースト指数同様、計算中にエラーが多発した。また、残念ながら、一見する限り、このまま何か活用できるような印象を受けなかった。</p>
<table border="0"><tr><br><img src="/2017/02/02/vix-autocorr/lyapnov.png" title="リアプノフ指数の推移" width="1200"><br></tr></table>

<p>左は観測期間48日のリアプノフ指数を横軸とし、翌日のVIX指数の変化率を縦軸にしたもの、右は256日のリアプノフ指数の5日平均からの乖離を横軸にしたものである。特筆するような特徴はなさそうである。</p>
<table border="0"><tr><br><img src="/2017/02/02/vix-autocorr/lyapnov_sensitivities.png" title="リアプノフ指数とVIX指数の動きの相関" width="1200"><br></tr></table>

<h2 id="自己相関"><a href="#自己相関" class="headerlink" title="自己相関"></a>自己相関</h2><p>次に、VIX指数のデータ系列全体に対して自己相関と偏自己相関を計算したものが下記のチャートである。偏自己相関を見ると、１次のラグ（当日と前日の関係）までしか大きな関係はなく、過去の影響が急速に減少していることが分かる。<br>これまでと同じように、観測期間を変えて、偏自己相関の１次のラグの時系列の変化を追うと以下のようになる。ハースト指数やリアプノフ指数とは違い、観測期間が少なくても計算できるので、最短の観測期間を営業日８日とした。</p>
<table border="0"><tr><br><img src="/2017/02/02/vix-autocorr/autocorrelation.png" title="自己相関と偏自己相関" width="1200"><br></tr></table>

<p>偏自己相関の値が小さくなったところで、VIX指数が反転する傾向があるように見える。観測期間が８日のものでは、偏自己相関が-0.2より小さくなってくると反転が近い印象があるが、観測期間が長くなればなるほど、VIX指数が判定する偏自己相関のレベルが分かりにくくなる。<br>そこで、観測期間をさらに短くして比べてみることにする。</p>
<table border="0"><tr><br><img src="/2017/02/02/vix-autocorr/shortterm_autocorrelation.png" title="偏自己相関の推移" width="1200"><br></tr></table>

<p>本題からは逸れるが、その印象を確認するために、１次の偏自己相関の値が閾値を下回る前後でのVIX指数の動きを確認した。まず、-0.2から-0.5までの閾値別、観測期間別に、偏自己相関の値が閾値を下回る前1-5日間の変化を横軸、閾値を超えたあとの同じ日数の変化を縦軸においた。そうしてその一番相関係数の絶対値の大きい組み合わせを探したのが下記の結果である。なお、連続して閾値を超える日が続くケースを除外するために、前の閾値を超えた日から5日以内のものは除外するようにした。<br>観測期間は、最短の5日間、閾値-0.2の結果が良く、前後の価格変化を5日間で評価する一番左のケースが一番良い結果となった。とりわけ、VIX指数が大きく上昇している時に、１次の偏自己相関が-0.2を下回るとVIX指数が下落に転じる傾向が現れているように見える。ただし、全体として、それほど強い相関があるようには思えず、サンプル数も少ないので、さほど信頼できるものではなさそうだ。</p>
<p>せっかくなので、この一番左のチャートのケースで、閾値を下回ったところでVIX指数がどう動いたのかの確認をしてみたい。閾値を下回る前１０日、後１０日間についてVIX指数の動きを表したのが、次の４つのチャートである。４つのチャートにしたのは便宜的なもので、簡単に値動きのパターンを分類して、多少でも見やすくしただけで深い意味はない。先程は、VIX指数が急上昇した時に反転する傾向がはっきりしていると述べたが、これを見ると、むしろ、VIX指数が下落した時の底打ちを示すのに有効なように見える。</p>
<p>さらに、同じく観測期間８日の１次の偏自己相関を横軸、VIX指数の翌日まえの変化率を縦軸にしたものが、左のチャート、横軸を偏自己相関の前日からの差分にしたものが右のチャートである。左のチャートでは、偏自己相関が低いときには、VIX指数の変動の幅が小さく、偏自己相関が高いときには変動が大きいことが示されている。</p>
<p>ここで、VIX指数が１次の偏自己相関が閾値を下回る前の標準偏差が低い時には、その後のVIX指数の水準が上がり、逆に標準偏差が大きい場合には、VIX指数の水準が下がるという仮定をする。<br>偏自己相関の観測期間別に、閾値を下回る前のVIX指数の標準偏差と、閾値を下回った後のVIX指数の平均値が最大になるような閾値、ならびに、標準偏差と平均値の計算期間を探すと、下記のようになった（半年に一回の頻度に相当する４２件以上の例が取れる範囲とした）。今度はかなりしっかりした相関が現れたと言えよう。</p>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;この記事に書いてあること&quot;&gt;&lt;a href=&quot;#この記事に書いてあること&quot; class=&quot;headerlink&quot; title=&quot;この記事に書いてあること&quot;&gt;&lt;/a&gt;この記事に書いてあること&lt;/h2&gt;&lt;p&gt;・VIXの回帰性を確認するために、ハースト指数、リ
    
    </summary>
    
    
      <category term="VIX" scheme="http://fanannan.github.io/tags/VIX/"/>
    
  </entry>
  
  <entry>
    <title>Yang-Zhangボラティリティ</title>
    <link href="http://fanannan.github.io/2017/02/01/yangzhang/"/>
    <id>http://fanannan.github.io/2017/02/01/yangzhang/</id>
    <published>2017-02-01T02:35:00.000Z</published>
    <updated>2017-02-08T06:32:09.115Z</updated>
    
    <content type="html"><![CDATA[<hr>
<h2 id="この記事に書いてあること"><a href="#この記事に書いてあること" class="headerlink" title="この記事に書いてあること"></a>この記事に書いてあること</h2><p>・Yang-Zhangによるボラティリティの計算式は、データとなる日数が少なくても比較的精度が高く有用だと思われる。</p>
<hr>
<h2 id="ランダムウォークとボラティリティ"><a href="#ランダムウォークとボラティリティ" class="headerlink" title="ランダムウォークとボラティリティ"></a>ランダムウォークとボラティリティ</h2><p>株価や金利などの動きは、一般的な理論では、ランダムウォークに基づいていると言われる。<br>もちろん、厳密にそう言えるものかどうかという議論はたくさんあるが、いわゆる標準的なモデルでは、ランダムウォークが前提だし、株価や金利などの評価をするときには、まずはそこから始めなくてはならない。<br>ランダムウォークの動きを決めるのは、ボラティリティの大きさだ。ボラティリティの値を与えれば、株価や金利のクのシミュレーションを行うことができるし、逆に、実際の株価や金利の動き（経路）から、ボラティリティを推定することもできる。</p>
<h2 id="一般的なボラティリティの推定方法"><a href="#一般的なボラティリティの推定方法" class="headerlink" title="一般的なボラティリティの推定方法"></a>一般的なボラティリティの推定方法</h2><p>株価を例に取ると、ある営業日の終値と、その前日の終値の変化率の対数を求め、そのデータを一定の計測期間について集めて標準偏差を計算するのが、ごく一般的な方法だ。たとえば、１か月間の株価のボラティリティを知りたければ、その株価の過去２０営業日分の日次の対数変化率を計測し、その標準偏差を求めて、比較しやすいよう、期間１年に相当するボラティリティに換算する。</p>
<p>ただ、この方法だと、計測期間が短い場合には、精度がでない。過去２日間や３日間では、データが少なすぎて、ボラティリティが適切に計算できるはずがない。とりわけ、終値があまり動かなくても、実際には日中の価格変動が大きくなっているとしても、そうした状況は一般的な計算方法では全く評価できない。</p>
<h2 id="Yang-Zhangボラティリティ"><a href="#Yang-Zhangボラティリティ" class="headerlink" title="Yang-Zhangボラティリティ"></a>Yang-Zhangボラティリティ</h2><p>日次の株価のデータとして、終値だけでなく、始値、高値、安値、終値を活用し、夜間や日中の動きを反映したボラティリティを計測する方法がある。それらのなかでも、もっとも良い方法とされているのが、Yang-Zhangの式である。困ったことに、元論文を見失ってしまったので、計算方法は後述のpythonでの実装を見てほしい。一点、気をつけるべきところは、式の中に定数が入ってくるところで、これは、確か米国市場における市場の開いている時間とそれ以外の時間の長さによって決まる数値であったと記憶している。</p>
<h2 id="特性の確認"><a href="#特性の確認" class="headerlink" title="特性の確認"></a>特性の確認</h2><p>さて、では、このYang-Zhangの式によるボラティリティの推定法が、一般的な推定法と比べて、どう違うのか簡単なシミュレーションで比べてみたい。<br>まずは、１年間の株価の動きを年率上昇率10%、ボラティリティ10%のランダムウォークとして生成する。ここでは、営業日252日として、その間昼も夜も関係なく、30分刻みで株価が動き続けるものと想定している。</p>
<pre><code>import numpy as np
import math
import pandas as pd
import matplotlib.pyplot as plt

INIT_PRICE = 100.0
AVERAGE_RETURN = 0.1
VOLATILITY = 0.1
DAYS_PER_YEAR = 252
UNITS_PER_DAY = 48
NUM_UNITS = DAYS_PER_YEAR*UNITS_PER_DAY
CLOSING_TIME_OFFSET = 13 # 6.5 hours x 2

def make_price_movement(init_price, average_return, volatility, num_units):
    returns = np.random.normal(average_return/num_units, volatility/math.sqrt(num_units), num_units)
    price_list = [init_price]
    for x in returns:
        price_list.append(price_list[-1]*(1.0+x))
    return price_list

price_movement = make_price_movement(INIT_PRICE, AVERAGE_RETURN, VOLATILITY, NUM_UNITS)
fig = plt.figure(figsize=(24, 8))
ax1 = fig.add_subplot(1,2,1)
ax1.plot(price_movement)
plt.show()
</code></pre><p>これにより、次のチャートのような株価の経路が生成できる。当然、実行するたびに違う経路ができる。</p>
<table border="0"><tr><br><img src="/2017/02/01/yangzhang/simulated.png" title="ランダムウォークによる株価経路" width="500"><br></tr></table>


<p>Yang-Zhangの計算式の実装例がGithubにあったので、ここではそれをそのまま引用させていただくことにする。</p>
<pre><code># https://github.com/jasonstrimpel/volatility-trading/tree/master/volatility/models

def YangZhang(prices, window=30):
    log_ho = (prices[&apos;High&apos;] / prices[&apos;Open&apos;]).apply(np.log)
    log_lo = (prices[&apos;Low&apos;] / prices[&apos;Open&apos;]).apply(np.log)
    log_co = (prices[&apos;Close&apos;] / prices[&apos;Open&apos;]).apply(np.log)
    log_oc = (prices[&apos;Open&apos;] / prices[&apos;Close&apos;].shift(1)).apply(np.log)
    log_oc_sq = log_oc**2
    log_cc = (prices[&apos;Close&apos;] / prices[&apos;Close&apos;].shift(1)).apply(np.log)
    log_cc_sq = log_cc**2
    rs = log_ho * (log_ho - log_co) + log_lo * (log_lo - log_co)
    close_vol = log_cc_sq.rolling(window=window,center=False).sum() * (1.0 / (window - 1.0))
    open_vol = log_oc_sq.rolling(window=window,center=False).sum() * (1.0 / (window - 1.0))
    window_rs = rs.rolling(window=window,center=False).sum() * (1.0 / (window - 1.0))
    result = (open_vol + 0.164333 * close_vol + 0.835667 * window_rs).apply(np.sqrt) * math.sqrt(252)
    result[:window-1] = np.nan
    return result
</code></pre><p>次に、ある株価の経路が与えられたときに、それを観測して、日次のデータを取り出すコードを用意する。</p>
<pre><code>def observe_close_only(price_movement, units_per_day):
    r = list()
    for i in range(0, len(price_movement)-1, units_per_day):
        r.append(price_movement[i])
    df = pd.DataFrame(r, index=range(0, len(r)), columns=[&apos;Close&apos;])
    return df

def observe_olhc_only(price_movement, units_per_day, closing_time_offset):
    o, h, l, c = list(), list(), list(), list()
    for i in range(0, len(price_movement)-1, units_per_day):
        o.append(price_movement[i])
        h.append(max(price_movement[i+1:i+closing_time_offset+1]))
        l.append(min(price_movement[i+1:i+closing_time_offset+1]))
        c.append(price_movement[i+closing_time_offset])
    df = pd.DataFrame({&apos;Open&apos;: o, &apos;High&apos;: h, &apos;Low&apos;: l, &apos;Close&apos;: c}, index=range(0, len(o)))
    return df

def measure_YangZhang(df_ohlc):
    result = list()
    for i in range(2, len(df_ohlc)):
        est = YangZhang(df_ohlc.iloc[-i-1:, :], i)
        result.append(est.values[-1])
    return result

def measure_ordinal(df_close_only):
    ret = (df_close_only/df_close_only.shift(1)).apply(np.log).dropna()
    result = list()
    for i in range(2, len(ret)):
        est = ret[:i].std()*math.sqrt(DAYS_PER_YEAR)
        result.append(est)
    return result
</code></pre><p>最後に、200本の経路を生成させて、観測期間別の状況を見てみよう。</p>
<pre><code>fig = plt.figure(figsize=(24, 8))
ax1 = fig.add_subplot(1,2,1)
ax2 = fig.add_subplot(1,2,2)
ax1.set_title(&apos;ordinal&apos;)
ax2.set_title(&apos;YangZhang&apos;)
ax1.set_ylim((0.0, 0.25))
ax2.set_ylim((0.0, 0.25))
est_ordinal_list = list()
est_YangZhang_list= list()
for i in range(200):
    price_movement = make_price_movement(INIT_PRICE, AVERAGE_RETURN, VOLATILITY, NUM_UNITS)
    df_close_only = observe_close_only(price_movement, UNITS_PER_DAY)
    df_ohlc = observe_olhc_only(price_movement, UNITS_PER_DAY, CLOSING_TIME_OFFSET)
    est_ordinal = measure_ordinal(df_close_only)
    est_YangZhang = measure_YangZhang(df_ohlc)
    est_ordinal_list.append(est_ordinal)
    est_YangZhang_list.append(est_YangZhang)
    ax1.plot(est_ordinal, alpha=0.05)
    ax2.plot(est_YangZhang, alpha=0.05)
</code></pre><table border="0"><tr><br><img src="/2017/02/01/yangzhang/yangzhang.png" title="観測期間による推定ボラティリティ" width="1200"><br></tr></table>

<p>左が一般的な方法、右側がYang-Zhangの式によるものである。いずれも縦軸が推定されたボラティリティを、横軸が観測期間（＝データの数）である。いずれも観測期間が長くなるに連れて、はじめに設定したボラティリティに近い値を推定できている。<br>ひと目で分かるのは、一般的な方法では観測期間が数日しかない場合、終値に動きが現れないケースに対応して、非常に低い推定値になってしまうことがあるのに対し、Yang-Zhangの方では、始値、高値、安値の情報も活用することにより、過小評価を起こしにくいことである。<br>さらに、一般的な方法では、観測期間が100日くらいでもかなりばらつきが見られるのに、Yang-Zhangの方では大分収束が進んでいる。わかりやすいようにサンプルパスの数を2000にして、ヒストグラムで見ると、次のようになる。</p>
<table border="0"><tr><br><img src="/2017/02/01/yangzhang/distribution.png" title="観測期間によるボラティリティ推定誤差分布" width="1200"><br></tr></table>

<p>左側のヒストグラムは観測期間20日(営業日での１か月に相当)、真ん中は100日、右は200日で、青が一般的な方法、赤がYang-Zhangの式によるものである。計算に使う情報の量が違うとは言え、数週間程度の短い期間ならまだしも、長い期間でもそれなりに大きな違いがあることは印象的だ。<br>１か月単位でボラティリティを計測するというのは、比較的ありがちなことだとは思うが、こうやって見てみると、誤差の大きさに改めて驚かされる。一般的な方法を使う場合の、ボラティリティ過小評価の危険は頭の片隅においておく必要がありそうだ。</p>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;この記事に書いてあること&quot;&gt;&lt;a href=&quot;#この記事に書いてあること&quot; class=&quot;headerlink&quot; title=&quot;この記事に書いてあること&quot;&gt;&lt;/a&gt;この記事に書いてあること&lt;/h2&gt;&lt;p&gt;・Yang-Zhangによるボラティリティの計算式
    
    </summary>
    
      <category term="株" scheme="http://fanannan.github.io/categories/%E6%A0%AA/"/>
    
    
      <category term="株" scheme="http://fanannan.github.io/tags/%E6%A0%AA/"/>
    
      <category term="評価方法" scheme="http://fanannan.github.io/tags/%E8%A9%95%E4%BE%A1%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>クローク・トレード</title>
    <link href="http://fanannan.github.io/2017/01/27/cloak-trade/"/>
    <id>http://fanannan.github.io/2017/01/27/cloak-trade/</id>
    <published>2017-01-26T15:00:00.000Z</published>
    <updated>2017-01-27T22:34:31.594Z</updated>
    
    <content type="html"><![CDATA[<hr>
<h2 id="この記事に書いてあること"><a href="#この記事に書いてあること" class="headerlink" title="この記事に書いてあること"></a>この記事に書いてあること</h2><p>・ファンドマネージャーによる恣意的なパフォーマンス操作について<br>・クローク・トレードとは何か<br>・日米の株式市場に、クローク・トレードは存在しそうか<br>・ファンドマネージャーのクローク・トレードについて窺えること</p>
<hr>
<h2 id="ちょっと長い前置き"><a href="#ちょっと長い前置き" class="headerlink" title="ちょっと長い前置き"></a>ちょっと長い前置き</h2><p>筆者は以前の職場で、ある種の機関投資家向けファンドの投資を検討する際に、アメリカの大手のファンドマネージャーがどのように銘柄の入れ替えを行っているかを細かくチェックしていた。機関投資家は、その気になれば色々資料が手に入るものだ。<br>普通に考えれば、ファンドマネージャーとしては、ファンドの成績を上げるために、値段が上がるであろう銘柄を購入してファンドに入れ、値段が下がるであろう銘柄を売却するはずである。しかし、実際にファンドマネージャーが行う取引を見ていくと、色々と面白い発見があった。</p>
<p>ファンドの種類にもよるが、一般的には、ファンドにおいてどんな銘柄をどれだけ保有しても良い、あるいは逆に保有してはいけないという条件が設定されている。例えば、社債に投資するファンドがあるとしよう。そんな場合、ファンドマネージャーは、ファンドに設定された投資金額のうち、格付機関による信用格付が一定以上の銘柄を何％以上保有しなければならないとか、社債の価格が幾ら以上のものが何％以上でないといけないとかいうような、予め設定された条件を守らなくてはならない。また、ポートフォリオの分散を図るために、一定の算式による業種分散スコア（diversity score）がある水準以上でなければならないとか、またさらに、ある水準以上を達成していれば、より自由に、より緩い条件のもとでファンドマネージャーの裁量で取引をしても良いというようなことになっていたりもする。</p>
<p>これらの条件は、本来の趣旨としては、投資家に対して、ファンドの目的に沿った投資運用活動を約束し、ひいてはより確実に成績を上げることを目指し設定されているはずである。また、ファンドマネージャーが適切にファンドの趣旨の通りに運用活動をしているかどうか、投資家によるモニタリングをしやすくするためのもののはずである。</p>
<p>ところが、実際はどうか。<br>ファンドマネージャーは、これらの条件を守りながら、全く”合法的”にファンドの成績を操作することがある。例えば、一定以下の信用格付の銘柄を購入してはいけないという条件があったとしても、それはあくまでも購入の時点での条件でしかない。だから、急激に信用力が悪化していて、今後も引き続き悪化することがほぼ明らかな銘柄であっても（多くの場合信用格付は社債価格や株価など市場の動きより遅いし、格付機関のなかでも判断の早い遅いがあるので、ある程度予見可能である）、個別のファンドに設定されている条件に反していない限り、ファンドマネージャーはそういう銘柄を購入してもよい。<br>だから、ファンドマネージャー自身が重要だと思っているファンド（例えば重要な顧客が投資しているとか、看板商品であるとか）のなかに、今後パフォーマンスが悪くなりそうな銘柄があり、重要だと思っていないファンドにそういう銘柄を持たすことができるのなら、重要なファンドから重要でないファンドにそういう銘柄を移せば、重要なファンドの成績を守ることができるのである。</p>
<p>筆者らは、そういう重要でないファンドのことを”ゴミ箱”と呼んでいた。ゴミ箱であるかどうかは、世間の評価とは直接は関係ない。市場の状況が良ければ、ゴミ箱やゴミ箱予備軍も良い成績を出すし、ファンドマネージャーとしても扱っているファンド全ての成績が良いに越したことはない。しかし、状況が悪くなれば、優遇されているファンドとゴミ箱との違いは明らかになる。とりわけ、ファンドに優先劣後構造がある場合、最劣後の部分を投資している投資家にとっては、極めて重大な問題になるが、契約上設定された条件を守っている限り、ファンドマネージャーには落ち度はないということになる。</p>
<p>もう一点、分散スコアについても触れておこう。一般に、分散スコアを向上させるためには、銘柄の産業分散を図れば良いが、そもそも産業分類というのは、かなり恣意的なものである。端的に言えば、環境関連のビジネスがひとつの業種として定義されている場合、その範疇に入る企業の数は極めて限られる。したがって、そこらじゅうの似たようなファンドで、環境関連の特定の銘柄が保有されることになる。投資家としては、分散スコアの良いファンドをたくさん保有して、より分散を図っているつもりであっても、全体をよく見わたせば、特定の銘柄をたっぷり抱えていることになっているかもしれないわけだ。そこで仮にそういう銘柄のパフォーマンスが悪化すれば、投資家は、大きなダメージを被ることになる。</p>
<p>一応、ファンドマネージャーという業務の名誉のために触れておくとすると、ゴミ箱を作らず、わけへだてなく真摯に良い運用をしていると思われるところもないわけではない。ただ、そういうファンドマネージャーには、なかなかお目にかかることは少なかったと言わざるをえない。<br>いわゆる優秀なファンドマネージャーであればあるほど、抜け目なく冷徹に（ファンドの投資家の利益ではなく）自分の利益を最大化していると思っておくのが妥当な線だと思う。要は、優秀なファンドマネージャーほど簡単には信用できないということだ。</p>
<p>もっとも、筆者がそういうファンドマネージャーの行動を丹念にチェックしていたのはかなり前の話なので、今では変わっている可能性もなくはないが、まあ、あまり期待できないように思う（念の為に申し添えると、以上の話は、冒頭に書いたように、機関投資家向けのファンドを扱うアメリカのファンドマネージャーについての話であって、日本の個人向けのファンドに関する話ではない）。</p>
<h2 id="クローク・トレード"><a href="#クローク・トレード" class="headerlink" title="クローク・トレード"></a>クローク・トレード</h2><p>たまたま最近、ファンドマネージャーが投資家向けの報告を行うタイミングで保有銘柄を一時的に動かす取引のことをクローク・トレード（Cloak(ed) Trade）と呼ぶことを知った。例えば、報告のタイミングで、ある銘柄を条件を超えて保有するわけにはいかないので、報告の基準日の直前に売り、基準日の直後に同じ銘柄を買い戻すような取引である。ちょうどクロークに一時預けをしているようなものというわけだ。逆に、基準日の直前に買って、直後に売るという行動もありえるだろう。</p>
<p>今の筆者には、ファンドマネージャーがどのような取引をしているのか詳細な情報を得る方法はないので、株価の変動状況を頼りに、クローク・トレードが実際に存在するかどうか調べてみることにしたい。</p>
<h2 id="株価データ"><a href="#株価データ" class="headerlink" title="株価データ"></a>株価データ</h2><p>ここでは、株価のデータとして、ポーランドの証券会社Stooqの提供する日次データを使用する。本記事を書いているタイミングでは、Stooqから日本株3542銘柄、NYSE3,613銘柄、NASDAQ 2,979銘柄のデータが得られた。Stooqのデータは、Yahoo Financeなどのデータと食い違うところもあるが、一度に大量の銘柄の時系列情報が取得できるところが大きなメリットである。今回は大雑把な状況を把握するだけなので、データの細かいチェックや配当調整などは行わない。</p>
<h2 id="評価方法"><a href="#評価方法" class="headerlink" title="評価方法"></a>評価方法</h2><p>月末と月初の株価の動きには、次の４パターンがある。<br> (1) 月末に株価が上がり、月初にも株価が上がる（↑↑）<br> (2) 月末に株価が上がり、月初に株価が下がる（↑↓）<br> (3) 月末に株価が下がり、月初に株価が上がる（↓↑）<br> (4) 月末に株価が下がり、月初にも株価が下がる（↓↓）<br>ごくごく単純に考えれば、それぞれのパターンが起きる可能性は２５％である。もし、先ほど述べたように、ファンドマネージャーが月末を挟んでクローク・トレードをしているのであれば、(2)あるいは(3)が多く見られるはずである。<br>先ほど冒頭に述べた発想からすると、クローク・トレードは特定の銘柄について行われるものであって、全ての銘柄に同じように行われるものではないはずである。したがって、ここで着目したいのは、他の大多数の銘柄とは違い、(2)または(3)が際立って良く起こる銘柄が存在するかどうかである（市場全体の株価が上げているとか、インデックスの動きを控除するというようなことは対象とする全ての銘柄に共通することなので、特段考慮する必要はない）。</p>
<h2 id="計算結果"><a href="#計算結果" class="headerlink" title="計算結果"></a>計算結果</h2><p>Stooqのデータの中から、2006年1月から2016年12月までの間に、６０か月以上のデータが取得できる銘柄を対象として、銘柄別に(2)と(3)それぞれに該当する月の数を数え、それぞれがデータとして使用できた月数に対する比率を計算することとした。例えば、ある銘柄について、過去５か月のデータがあり、２回の(2)があり、１回の(3)があったのであれば、それぞれ40%と20%ということになる。</p>
<p>月末最終営業日の１日前の終値から最終営業日までの変化と、最終営業日の終値から翌月初営業日終値までの１日間の変化を参照し、この計算を日本株の各銘柄について行うと、次のようなヒストグラムになった。</p>
<table border="0"><tr><td><br><img src="/2017/01/27/cloak-trade/hist_JP_M_up_1_60.png" title="日本株観測期間1日毎月月初株高" width="250"><br></td><td><br><img src="/2017/01/27/cloak-trade/hist_JP_M_down_1_60.png" title="日本株観測期間1日毎月月初株安" width="250"><br></td></tr></table>

<p>左側の青のヒストグラムが月末に株価が上がり、月初に下がる(2)のパターン、右の赤のものがその反対の(3)のパターンである。横軸は0.025刻み、縦軸は銘柄数である。４つパターンがあるので、単純な平均は25%(0.25)で、大雑把に言えば、実際にそのあたりがヒストグラムのピークになっているが、明らかに青のヒストグラムでは左側の分布が大きく、赤のヒストグラムでは右側の裾野が大きい。比較のために、４つのパターンがランダムに発生すると仮定して同じ銘柄データで作成したのが、次の黄色のヒストグラムであるが、分布の裾野が青や赤のケースよりもずっと狭いことが見て取れる（なお、これらの分布はどれも0から1までの範囲を取るので、平均が０に近い時には、左側が膨らみ、右側の裾が長くなる）。</p>
<table border="0"><tr><td><br><img src="/2017/01/27/cloak-trade/hist_JP_M_random_1_60.png" title="日本株観測期間1日毎月値動きランダム" width="250"><br></td></tr></table>

<p>さて、ここで月末に株価が下がり、翌月初に上がる、赤のヒストグラムについて意味を確認しておきたい。このヒストグラムは、右裾が横軸の値で0.5を超えている。これは、対象期間（60か月以上）の各月において、半分（０．５）以上の月で、月末に株価が下がり、翌月初に上がった銘柄が存在しているということを示している。<br>もちろん、確率的には、この株価のパターンにたまたま該当することはありえるが、それが60回中30回もあるというのは、偶然として説明するにはかなり稀有なことと考えるのが自然だろう。右側の裾野の形も、ランダムな場合の黄色のヒストグラムと比べてぐっと大きくなっているのも、何らかの理由が働いていることを示唆している。<br>また、青のヒストグラムは、月末に株価が上がり、翌月末に下がる比率の分布を示しているわけだが、その右側部分が大きく膨らんでいることは、そのような比率が低い、すなわち、月末に株価が上がって、翌月末に下がるものが少ないことを示している。</p>
<h2 id="株価変化観測期間による違い"><a href="#株価変化観測期間による違い" class="headerlink" title="株価変化観測期間による違い"></a>株価変化観測期間による違い</h2><p>ファンドマネージャーや機関投資家が売買を行う際、その金額が多額であれば、複数の日に分けて取引を行うことがある。そこで、先程は1日間だけの価格の動く方向を見たが、今度は3日間、5日間での動きを見てみたい。下のヒストグラムは、左から順にに月末を挟んで、パターン(3)について1, 3, 5日間の動きを見たものである（１日のものは再掲）。</p>
<table border="0"><tr><td><br><img src="/2017/01/27/cloak-trade/hist_JP_M_down_1_60.png" title="日本株観測期間1日毎月月初値下がり" width="250"><br></td><td><br><img src="/2017/01/27/cloak-trade/hist_JP_M_down_3_60.png" title="日本株観測期間3日毎月月初値下がり" width="250"><br></td><td><br><img src="/2017/01/27/cloak-trade/hist_JP_M_down_5_60.png" title="日本株観測期間5日毎月月初値下がり" width="250"><br></td></tr></table>

<p>これらによれば、観測日数が延びるのにつれて、右側の裾野の高さが下がっている。このことは、ファンドマネージャーや投資家が月末に株式の売却を行う際に、何日も必要とするうような銘柄は限られているということを示唆していると思われる。</p>
<h2 id="四半期末での状況"><a href="#四半期末での状況" class="headerlink" title="四半期末での状況"></a>四半期末での状況</h2><p>ここまで、60か月以上の期間の毎月末前後の株価の動きを見てきたが、ファンドマネージャーが投資家に報告を行ったり、機関投資家が業績を発表する基準となるのが四半期末であることを考えると、各月末よりも各四半期末の方が、よりはっきりとした特徴があるかもしれない。<br>下の左側のヒストグラムがこれまでと同じ（観測期間1日の毎月末のもの）、右側のヒストグラムが四半期の場合である。予想と異なり、特に目立った違いがあるとまでは言いづらい。しかも、毎四半期の場合には、サンプルデータの数が毎月末の場合の３分の１になるので、偶然の要素が働きやすく、ヒストグラムの裾野が広く見えやすいことを割り引いて考える必要もある。</p>
<table border="0"><tr><td><br><img src="/2017/01/27/cloak-trade/hist_JP_M_down_1_60.png" title="日本株観測期間1日毎月月初値下がり" width="250"><br></td><td><br><img src="/2017/01/27/cloak-trade/hist_JP_Q_down_1_15.0.png" title="日本株観測期間1日四半期月初値下がり" width="250"><br></td></tr></table>

<h2 id="市場別の違い"><a href="#市場別の違い" class="headerlink" title="市場別の違い"></a>市場別の違い</h2><p>ここまでのところで、クローク・トレードの様子を見るには、観測期間1日、毎月末で調べていけば良さそうなことが分かってきたが、米国株ではどうだろうか。以下、日本株の(2)と(3)のパターンに習い、NYSEとNASDAQのケースを並べてみた。</p>
<h3 id="日本株"><a href="#日本株" class="headerlink" title="日本株"></a>日本株</h3><table border="0"><tr><td><br><img src="/2017/01/27/cloak-trade/hist_JP_M_up_1_60.png" title="日本株観測期間1日毎月月初株高" width="250"><br></td><td><br><img src="/2017/01/27/cloak-trade/hist_JP_M_down_1_60.png" title="日本株観測期間1日毎月月初株安" width="250"><br></td></tr></table>

<h3 id="NYSE"><a href="#NYSE" class="headerlink" title="NYSE"></a>NYSE</h3><table border="0"><tr><td><br><img src="/2017/01/27/cloak-trade/hist_NYSE_M_up_1_60.png" title="NYSE観測期間1日毎月月初株高" width="250"><br></td><td><br><img src="/2017/01/27/cloak-trade/hist_NYSE_M_down_1_60.png" title="NYSE観測期間1日毎月月初株安" width="250"><br></td></tr></table>

<h3 id="NASDAQ"><a href="#NASDAQ" class="headerlink" title="NASDAQ"></a>NASDAQ</h3><table border="0"><tr><td><br><img src="/2017/01/27/cloak-trade/hist_NASDAQ_M_up_1_60.png" title="NASDAQ観測期間1日毎月月初株高" width="250"><br></td><td><br><img src="/2017/01/27/cloak-trade/hist_NASDAQ_M_down_1_60.png" title="NASDAQ観測期間1日毎月月初株安" width="250"><br></td></tr></table>

<p>これらを見ると、NYSEもNASDAQも、日本株ほど説明しやすい分布にはなっていなさそうだ。<br>NYSEについてはまだしも、NASDAQについては、ランダムな場合よりは裾野が広いとは言え、日本株ほど明確に(3)のパターンがあるとは言いづらい。</p>
<h2 id="おわりに"><a href="#おわりに" class="headerlink" title="おわりに"></a>おわりに</h2><p>一般的に、月末には株が売られ、月初に株が買われるという傾向があることは良く知られている。ただ、それは、市場全般にわたっての話である。この記事で調べた範囲では、特にそうなりやすい銘柄と、そうでもない銘柄がありそうだということが窺われた。<br>この切り口から、銘柄の特性の違いをうまく運用方法に反映できないか、いくつかアイデアを試してはみたが、残念ながらすぐには見つからなかった。具体的に、どんなファンドマネージャーが、どんな銘柄をどんなタイミングで取引しているのか、生の情報が手元にないと、これ以上踏み込んでいくのは難しいかもしれない。</p>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;この記事に書いてあること&quot;&gt;&lt;a href=&quot;#この記事に書いてあること&quot; class=&quot;headerlink&quot; title=&quot;この記事に書いてあること&quot;&gt;&lt;/a&gt;この記事に書いてあること&lt;/h2&gt;&lt;p&gt;・ファンドマネージャーによる恣意的なパフォーマンス
    
    </summary>
    
      <category term="株" scheme="http://fanannan.github.io/categories/%E6%A0%AA/"/>
    
    
      <category term="株" scheme="http://fanannan.github.io/tags/%E6%A0%AA/"/>
    
      <category term="運用方法" scheme="http://fanannan.github.io/tags/%E9%81%8B%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
</feed>
